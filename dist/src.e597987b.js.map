{"version":3,"sources":["src/modules/DOMstuff.js","src/modules/controller/GifImages.js","src/modules/helper.js","src/modules/render.js","src/modules/Constants.js","src/modules/controller/ImageSearchBox.js","src/modules/staticEventListeners.js","src/index.js"],"names":["DOMstuff","document","domElements","errorMsgModalCloseBtnEl","querySelector","imageSearchForm","imageSearchBtnEl","imageSeachClearBtnEl","imageInputEl","modal","_mainModalEl","_hideMainModal","classList","add","_showMainModal","remove","errorMsgDom","_errorMsgModalEl","_errorMsgModalDisplayEl","show","msg","textContent","close","loadingMsgDom","_loadingMsgModalEl","GifImagesController","_imagesLocalStore","addToStore","imgObj","push","getImages","emptyStore","length","clearNode","node","firstChild","removeChild","timeoutPromise","time","Promise","resolve","setTimeout","Error","request","url","init","timeout","Object","assign","mode","race","fetch","renderDOM","gifImages","list","imageList","forEach","image","idx","li1","createElement","img1","setAttribute","images","original","appendChild","GIPHY_API_KEY","GIPHY_API_BASE_URL","API_TIMEOUT","API_ERROR_DEFAULT_MSG","ImageSearchBoxController","handleImageSearchBtnClick","e","preventDefault","textToSearch","value","trim","_loadImages","requestURL","requestParams","response","imageData","json","data","error","console","clearSeachText","addEventListener","log","loadDefaultImages"],"mappings":"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","file":"src.e597987b.js","sourceRoot":"..","sourcesContent":["const DOMstuff = ((document) => {\n  const domElements = (()=>{\n    const errorMsgModalCloseBtnEl = document.querySelector(\".err_msg_modal .btn--close\");\n    const imageSearchForm = document.querySelector(\".image__search_form\");\n    const imageSearchBtnEl = document.querySelector(\".image__search_btn--seach\");\n    const imageSeachClearBtnEl = document.querySelector(\".image__search_btn--clear\")\n    const imageInputEl = document.querySelector('input[name=\"gif-name\"]');\n\n    return{\n        errorMsgModalCloseBtnEl,\n        imageSearchForm,\n        imageSearchBtnEl,\n        imageSeachClearBtnEl,\n        imageInputEl,\n    }\n  })();\n\n  const modal = (() => {\n    const _mainModalEl = document.querySelector(\".modal\");\n\n    const _hideMainModal = () => _mainModalEl.classList.add(\"hidden\");\n    const _showMainModal = () => _mainModalEl.classList.remove(\"hidden\");\n\n    const errorMsgDom = (() => {\n      const _errorMsgModalEl = document.querySelector(\".err_msg_modal\");\n      const _errorMsgModalDisplayEl = document.querySelector(\".err_msg_modal__display\");\n        \n      function show(msg) {\n        _showMainModal();\n        _errorMsgModalEl.classList.remove(\"hidden\");\n        _errorMsgModalDisplayEl.textContent = msg;\n      }\n\n      function close() {\n        _errorMsgModalEl.classList.add(\"hidden\");\n        _errorMsgModalDisplayEl.textContent = \"\";\n        _hideMainModal();\n      }\n\n      return{ \n          show,\n          close,\n      }\n    })();\n\n    const loadingMsgDom = (() => {\n      const _loadingMsgModalEl = document.querySelector(\".loading_msg_modal\");\n\n      function show() {\n         _showMainModal();\n        _loadingMsgModalEl.classList.remove(\"hidden\");\n      }\n\n      function close() {\n        _loadingMsgModalEl.classList.add(\"hidden\");\n        _hideMainModal();\n      }\n\n      return {\n        show,\n        close,\n      };\n    })();\n\n    return {\n      errorMsgDom,\n      loadingMsgDom,\n    };\n  })();\n\n  return {\n      modal,\n      domElements\n  }\n})(document);\n\nexport const {modal,domElements} = DOMstuff;\n","const GifImagesController = (() => {\n    const _imagesLocalStore = [];\n\n    function addToStore(imgObj){\n        _imagesLocalStore.push(imgObj);\n    }\n\n    function emptyStore(){\n       _imagesLocalStore.length = 0;\n    }\n\n    function getImages(){\n        return [..._imagesLocalStore];\n    }\n\n\n    return {\n        addToStore,\n        getImages,\n        emptyStore\n    }\n})();\n\nexport {GifImagesController}; ","/**\n * Remove all the children of DOM Node\n * @param {object} node - A DOM Node \n */\nfunction clearNode(node){\n    while(node.firstChild){\n        node.removeChild(node.firstChild);\n    }\n}\n\n/**\n * A timeout utility for promise\n * @param {number} time - Time in which promise will resolved\n * @return {Promise.<Object>} - A promise object that resolve after specified time.\n */\nfunction timeoutPromise(time = 60000){\n    return new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve(Error(\"API Timeout\"));\n      }, time);\n    });\n}\n\nfunction request(url, init = {}, timeout) {\n  init = Object.assign({ mode: \"cors\" }, init);\n  return Promise.race([fetch(url, init), timeoutPromise(timeout)]);\n}\n\nexport {\n    clearNode,\n    timeoutPromise,\n    request\n}","import {GifImagesController} from \"./controller/GifImages.js\";\nimport {clearNode} from \"./helper.js\";\n\nconst renderDOM = (() => {\n  const gifImages = (() => {\n    function list() {\n      const imageList = document.querySelector(\".image__list\");\n      clearNode(imageList);\n\n      GifImagesController.getImages().forEach((image, idx) => {\n        const li1 = document.createElement(\"li\");\n        const img1 = document.createElement(\"img\");\n\n        li1.classList.add(\"image__item\", `image__item--${idx + 1}`);\n        \n        img1.setAttribute(\"src\", `${image.images.original.url}`);\n        \n        li1.appendChild(img1);\n        imageList.appendChild(li1);\n      });\n    }\n\n    return { list };\n  })();\n\n  return { gifImages };\n})();\n\nexport {renderDOM};\n","export const GIPHY_API_KEY = \"mxFIqNNWgjxb3HLuiEPqXsC8jTFfAS4W\";\nexport const GIPHY_API_BASE_URL = \"https://api.giphy.com/v1/gifs/\";\nexport const API_TIMEOUT = 60000;\nexport const API_ERROR_DEFAULT_MSG = \"Due to technical error unable to fetch images :(\";","import { GifImagesController } from \"./GifImages.js\";\nimport { renderDOM } from \"../render.js\";\nimport { request } from \"../helper.js\";\nimport { domElements, modal } from \"../DOMstuff.js\";\nimport {\n  GIPHY_API_KEY,\n  GIPHY_API_BASE_URL,\n  API_ERROR_DEFAULT_MSG,\n  API_TIMEOUT,\n} from \"../Constants.js\";\n\nconst ImageSearchBoxController = (() => {\n  /**\n   * It fetch the images from passed url and from response imageData load the images to DOM.\n   * @param {string} requestURL -  The url for which request is made.\n   * @param {object} requestParams - request parameters\n   * @param {number} timeout -  The time in which API should provide a valid response,\n   *                            otherwise request will be cancelled.\n   */\n  async function _loadImages(requestURL, requestParams = {}, timeout) {\n    modal.loadingMsgDom.show();\n\n    try {\n      const response = await request(requestURL, requestParams, timeout);\n      const imageData = await response.json();\n\n      if (imageData.data.length) {\n        GifImagesController.emptyStore();\n        imageData.data.forEach((imgObj) => {\n          GifImagesController.addToStore(imgObj);\n        });\n        renderDOM.gifImages.list();\n        modal.loadingMsgDom.close();\n      } else {\n        modal.errorMsgDom.show(\"No gifs are available for seached query\");\n      }\n    } catch (error) {\n      console.error(error);\n      modal.errorMsgDom.show(API_ERROR_DEFAULT_MSG);\n    }\n  }\n\n  /**\n   * Image Search Clear button event handler. It delete the query typed in image search box.\n   * @param {object} - The Click event occur on clicking the image search clear button.\n   */\n  function clearSeachText(e) {\n    const _imageInputEl = domElements.imageInputEl;\n    _imageInputEl.value = \"\";\n  }\n\n  /**\n   * Image Search button event handler. It load the images on the browser screen based\n   * on the search query.\n   * @param {object} - The Click event occur on clicking the image search button.\n   */\n  function handleImageSearchBtnClick(e) {\n    e.preventDefault();\n    const _imageInputEl = domElements.imageInputEl;\n    let textToSearch = _imageInputEl.value.trim();\n    if (textToSearch.length) {\n      let requestURL = `${GIPHY_API_BASE_URL}search?api_key=${GIPHY_API_KEY}&q=${textToSearch}`;\n      _loadImages(requestURL, {}, API_TIMEOUT);\n    }\n  }\n\n  return {\n    handleImageSearchBtnClick,\n    clearSeachText,\n  };\n})();\n\nexport { ImageSearchBoxController };","import {modal,domElements} from './DOMstuff.js'\nimport {ImageSearchBoxController} from './controller/ImageSearchBox.js'\n\ndomElements.errorMsgModalCloseBtnEl.addEventListener('click',(e)=>modal.errorMsgDom.close());\ndomElements.imageSearchForm.addEventListener('submit',ImageSearchBoxController.handleImageSearchBtnClick);\ndomElements.imageSeachClearBtnEl.addEventListener('click',ImageSearchBoxController.clearSeachText);","import \"./modules/staticEventListeners.js\";\nimport { GifImagesController } from \"./modules/controller/GifImages.js\";\nimport {\n  GIPHY_API_KEY,\n  GIPHY_API_BASE_URL,\n  API_ERROR_DEFAULT_MSG,\n  API_TIMEOUT,\n} from \"./modules/Constants.js\";\nimport { renderDOM } from \"./modules/render.js\";\nimport { modal } from \"./modules/DOMstuff.js\";\nimport { request } from \"./modules/helper.js\";\nimport \"./modules/staticEventListeners.js\";\n\n(function initApp(document) {\n  /**\n   * It will fetch and load default gifs on user screen on each browser\n   * refresh window.\n   */\n  async function loadDefaultImages() {\n    const requestURL = `${GIPHY_API_BASE_URL}search?api_key=${GIPHY_API_KEY}&q=goodmorning`;\n    modal.loadingMsgDom.show();\n\n    try {\n      const response = await request(requestURL, {}, API_TIMEOUT);\n      const imageData = await response.json();\n      GifImagesController.emptyStore();\n\n      if (imageData.data.length) {\n        imageData.data.forEach((imgObj) => {\n          GifImagesController.addToStore(imgObj);\n        });\n        renderDOM.gifImages.list();\n        modal.loadingMsgDom.close();\n      } else {\n        modal.errorMsgDom.show(\"No gifs are available for seached query\");\n      }\n    } catch (error) {\n      console.error(error);\n      modal.errorMsgDom.show(API_ERROR_DEFAULT_MSG);\n    }\n  }\n  console.log(\"APP LOADED\");\n\n  //Add DOMContentLoaded event to loadDefaultImages on DOM\n  document.addEventListener(\"DOMContentLoaded\", (e) => loadDefaultImages());\n})(document);\n"]}